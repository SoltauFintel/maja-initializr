package ${packageName};

#if ($auth)
import de.mwvb.maja.auth.AuthPlugin;
#end
#if ($authMongo)
import de.mwvb.maja.auth.rememberme.KnownUser;
import de.mwvb.maja.auth.rememberme.AuthPluginWithRememberMe;
#end
#if ($mongo)
import de.mwvb.maja.mongo.Database;
#end
import de.mwvb.maja.web.AbstractWebApp;
import ${packageName}.actions.Index;
#if ($auth)
import spark.Request;
#end

public class ${appClassName} extends AbstractWebApp {
	public static final String VERSION = "0.1.0";

	@Override
	protected void routes() {
		_get("/", Index.class);
	}
	
	public static void main(String[] args) {
		new ${appClassName}().start(VERSION);
	}
#if ($mongo)

	@Override
	protected void initDatabase() {
#if ($authMongo)	
		Database.open(KnownUser.class); // TODO add your entity
#else
		Database.open(); // TODO add your entity
#end
	}
#end
#if ($auth)
	
	@Override
	protected void init() {
#if ($authMongo)	
		auth = new AuthPluginWithRememberMe();
#else if ($auth)
		auth = new AuthPlugin();
#end				
	}

	public static String getUserId(Request req) {
		String userId = AuthPlugin.getUserId(req.session());
		if (userId == null || userId.isEmpty()) {
			throw new RuntimeException("User Id ist leer!"); // Programmschutz
		}
		return userId;
	}
#end
}
